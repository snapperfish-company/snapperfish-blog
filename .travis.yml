# back to language cpp to try to bypass osx node failure
language: node_js
node_js:
  - '6'

sudo: false

before_install: openssl aes-256-cbc -K $encrypted_69d732fbdaa9_key -iv $encrypted_69d732fbdaa9_iv -in deploy_key.enc -out deploy_key -d

# pre-install to bring in the correct version of node via nvm
# before_install:
#   - git submodule update --init --recursive
#   - git clone https://github.com/creationix/nvm.git ./.nvm
#   - source ./.nvm/nvm.sh
#   - nvm install $NODE_VERSION
#   - nvm use $NODE_VERSION
#   - npm config set python `which python`
#   - if [ $TRAVIS_OS_NAME == "linux" ]; then
#       export CC="gcc-4.8";
#       export CXX="g++-4.8";
#       export LINK="gcc-4.8";
#       export LINKXX="g++-4.8";
#     fi
#   - gcc --version
#   - g++ --version
# node 4 depends on gcc 4.8
# addons:
#   apt:
#     sources:
#     - ubuntu-toolchain-r-test
#     packages:
#     - g++-4.8
#     - gcc-4.8
# script needed to test, because defaults don't work on osx
script:
  - npm run build
  - git remote rm origin
  - git remote add origin git@github.com:snapperfish-company/snapperfish-company.github.io.git

branches:
  only:
  - master

deploy:
  skip_cleanup: true
  provider: script
  script: ./deploy.sh
  # on:
  #   branch: master
  #   node: '6'

env:
  global:
    - ENCRYPTION_LABEL="69d732fbdaa9"
    - GIT_NAME="Travis_CI"
    - GIT_EMAIL="travis-ci@snapper.fish"
    - DEPLOY_BRANCH="master"
